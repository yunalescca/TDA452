{-# LINE 1 "/var/folders/wg/7f_h0cj91d1cykmnwrbq_by80000gn/T/ghc13336_0/ghc_1.s" #-}
.data
	.align 2
.align 0
.globl ___stginit_Main
___stginit_Main:
.data
	.align 2
.align 0
_r5iE_closure:
	.long	_r5iE_info
	.long	0
	.long	0
	.long	0
.text
	.align 2
_r5iE_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_r5iE_info)+0
	.long	0
	.long	196630
_r5iE_info:
Lc5pb:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc5pc
Lc5pd:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc5pa
Lc5p9:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl L_base_TextziRead_readEither4_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziErr_error_info
Lc5pa:
	jmp *(%esi)
Lc5pc:
	jmp *-16(%ebx)
	.long  _r5iE_info - _r5iE_info_dsp
.data
	.align 2
.align 0
_r5iF_closure:
	.long	_r5iF_info
	.long	0
	.long	0
	.long	0
.text
	.align 2
_r5iF_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_r5iF_info)+0
	.long	0
	.long	327702
_r5iF_info:
Lc5pt:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc5pu
Lc5pv:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc5ps
Lc5pr:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl L_base_TextziRead_readEither2_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziErr_error_info
Lc5ps:
	jmp *(%esi)
Lc5pu:
	jmp *-16(%ebx)
	.long  _r5iF_info - _r5iF_info_dsp
.data
	.align 2
.align 0
_r5iG_closure:
	.long	_r5iG_info
	.long	0
	.long	0
	.long	0
.text
	.align 2
_r5iG_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_r5iG_info)+12
	.long	0
	.long	196630
_r5iG_info:
Lc5pK:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc5pL
Lc5pM:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc5pJ
Lc5pI:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl L_base_TextziParserCombinatorsziReadPrec_minPrec_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,16(%ebx)
	movl L_base_GHCziRead_zdfReadIntzuzdsconvertInt_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	incl %eax
	movl %eax,8(%ebx)
	movl L_stg_ap_p_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-20(%ebp)
	movl L_base_TextziRead_readEither5_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	incl %eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _base_GHCziRead_zdfReadInt3_info
Lc5pJ:
	jmp *(%esi)
Lc5pL:
	jmp *-16(%ebx)
	.long  _r5iG_info - _r5iG_info_dsp
.data
	.align 2
.align 0
_r5iL_closure:
	.long	_r5iL_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c5q6_str:
	.byte	118
	.byte	97
	.byte	108
	.byte	117
	.byte	101
	.byte	0
.text
	.align 2
_r5iL_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r5iL_info:
Lc5q7:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc5q8
Lc5q9:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc5q5
Lc5q4:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c5q6_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc5q5:
	jmp *(%esi)
Lc5q8:
	jmp *-16(%ebx)
	.long  _r5iL_info - _r5iL_info_dsp
.data
	.align 2
.align 0
_r5iM_closure:
	.long	_r5iM_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c5qI_str:
	.byte	116
	.byte	121
	.byte	112
	.byte	101
	.byte	0
.const
	.align 2
.align 0
_c5qY_str:
	.byte	98
	.byte	117
	.byte	116
	.byte	116
	.byte	111
	.byte	110
	.byte	0
.text
	.align 2
_r5iM_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r5iM_info:
Lc5qL:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc5rf
Lc5rg:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc5qH
Lc5qG:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c5qJ_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c5qI_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc5qH:
	jmp *(%esi)
Lc5rf:
	jmp *-16(%ebx)
	.long  _r5iM_info - _r5iM_info_dsp
.text
	.align 2
_c5qJ_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c5qJ_info:
Lc5qJ:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5qO_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5qJ_info - _c5qJ_info_dsp
.text
	.align 2
_c5qO_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c5qO_info:
Lc5qO:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc5rk
Lc5rj:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	movl %eax,%ecx
	addl $_c5qZ_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	addl $_c5qY_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc5rk:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5qO_info - _c5qO_info_dsp
.text
	.align 2
_c5qZ_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c5qZ_info:
Lc5qZ:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5r3_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5qZ_info - _c5qZ_info_dsp
.text
	.align 2
_c5r3_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c5r3_info:
Lc5r3:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc5rp
Lc5ro:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%eax
	movl %eax,(%ebp)
	jmp _c5rb_entry
Lc5rp:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5r3_info - _c5r3_info_dsp
.text
	.align 2
_c5rb_entry:
Lc5rb:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl (%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc5rs
Lc5rr:
	movl 3(%ecx),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_AttrName_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-16(%edi)
	movl 4(%ebp),%edx
	movl %edx,-12(%edi)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_Attribute_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -13(%edi),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc5rs:
	movl $20,904(%ebx)
	movl %eax,%edx
	addl $_c5ra_info-(1b)+0,%edx
	movl %edx,(%ebp)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c5ra_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c5ra_info:
Lc5ra:
	movl %esi,(%ebp)
	jmp _c5rb_entry
	.long  _c5ra_info - _c5ra_info_dsp
.data
	.align 2
.align 0
_r5iN_closure:
	.long	_r5iN_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c5sH_str:
	.byte	118
	.byte	97
	.byte	108
	.byte	117
	.byte	101
	.byte	0
.const
	.align 2
.align 0
_c5sX_str:
	.byte	67
	.byte	108
	.byte	105
	.byte	99
	.byte	107
	.byte	32
	.byte	109
	.byte	101
	.byte	0
.text
	.align 2
_r5iN_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r5iN_info:
Lc5sK:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc5te
Lc5tf:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc5sG
Lc5sF:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c5sI_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c5sH_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc5sG:
	jmp *(%esi)
Lc5te:
	jmp *-16(%ebx)
	.long  _r5iN_info - _r5iN_info_dsp
.text
	.align 2
_c5sI_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c5sI_info:
Lc5sI:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5sN_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5sI_info - _c5sI_info_dsp
.text
	.align 2
_c5sN_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c5sN_info:
Lc5sN:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc5tj
Lc5ti:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	movl %eax,%ecx
	addl $_c5sY_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	addl $_c5sX_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc5tj:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5sN_info - _c5sN_info_dsp
.text
	.align 2
_c5sY_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c5sY_info:
Lc5sY:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5t2_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5sY_info - _c5sY_info_dsp
.text
	.align 2
_c5t2_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c5t2_info:
Lc5t2:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc5to
Lc5tn:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%eax
	movl %eax,(%ebp)
	jmp _c5ta_entry
Lc5to:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5t2_info - _c5t2_info_dsp
.text
	.align 2
_c5ta_entry:
Lc5ta:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl (%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc5tr
Lc5tq:
	movl 3(%ecx),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_AttrName_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-16(%edi)
	movl 4(%ebp),%edx
	movl %edx,-12(%edi)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_Attribute_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -13(%edi),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc5tr:
	movl $20,904(%ebx)
	movl %eax,%edx
	addl $_c5t9_info-(1b)+0,%edx
	movl %edx,(%ebp)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c5t9_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c5t9_info:
Lc5t9:
	movl %esi,(%ebp)
	jmp _c5ta_entry
	.long  _c5t9_info - _c5t9_info_dsp
.data
	.align 2
.align 0
_r5iO_closure:
	.long	_ghczmprim_GHCziTypes_ZC_static_info
	.long	_r5iN_closure
	.long	_ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 2
.align 0
_r5iP_closure:
	.long	_ghczmprim_GHCziTypes_ZC_static_info
	.long	_r5iM_closure
	.long	_r5iO_closure+2
	.long	0
.data
	.align 2
.align 0
.globl _Main_main1_closure
_Main_main1_closure:
	.long	_Main_main1_info
	.long	0
.const
	.align 2
.align 0
_c5vU_str:
	.byte	72
	.byte	101
	.byte	108
	.byte	108
	.byte	111
	.byte	0
.const
	.align 2
.align 0
_c5wj_str:
	.byte	104
	.byte	49
	.byte	0
.const
	.align 2
.align 0
_c5x4_str:
	.byte	105
	.byte	110
	.byte	112
	.byte	117
	.byte	116
	.byte	0
.text
	.align 2
_s5oi_info_dsp:
.text
	.align 2
	.long	65539
	.long	131072
	.long	14
_s5oi_info:
Lc5xz:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc5xA
Lc5xB:
	addl $_c5xw_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	addl $-4,%ebp
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc5xA:
	jmp *-8(%ebx)
	.long  _s5oi_info - _s5oi_info_dsp
.text
	.align 2
_c5xw_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c5xw_info:
Lc5xw:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc5xE
Lc5xD:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc5xE:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5xw_info - _c5xw_info_dsp
.text
	.align 2
_s5p4_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_s5p4_info)+20
	.long	131077
	.long	65537
	.long	8323085
_s5p4_info:
Lc5yf:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc5ys
Lc5yt:
	movl %eax,%ecx
	addl $_c5yc_info-(1b)+0,%ecx
	movl %ecx,-8(%ebp)
	movl %eax,%ecx
	addl $_r5iL_closure-(1b)+0,%ecx
	movl %ecx,32(%ebx)
	movl 2(%esi),%ecx
	movl %ecx,24(%ebx)
	movl L_z30UqEPBHMdsbP05EH96SVtGd_ControlziMonadziIOziClass_zdfMonadIOIO_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,16(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_v_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl 6(%esi),%eax
	movl %eax,-4(%ebp)
	addl $-12,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOM_getProp_info
Lc5ys:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s5p4_info - _s5p4_info_dsp
.text
	.align 2
_c5yc_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_c5yc_info)+24
	.long	65
	.long	3997728
_c5yc_info:
Lc5yc:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5yh_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl %esi,%ecx
	movl %eax,%esi
	addl $_r5iL_closure-(1b)+0,%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5yc_info - _c5yc_info_dsp
.text
	.align 2
_c5yh_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_c5yh_info)+24
	.long	130
	.long	1900576
_c5yh_info:
Lc5yh:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc5yx
Lc5yw:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	movl %eax,%ecx
	addl $_c5yr_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl 4(%ebp),%ecx
	movl %ecx,16(%ebx)
	addl $_r5iG_closure-(1b)+0,%eax
	movl %eax,8(%ebx)
	movl (%edi),%eax
	movl %eax,4(%ebp)
	jmp _base_TextziParserCombinatorsziReadP_run_info
Lc5yx:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5yh_info - _c5yh_info_dsp
.text
	.align 2
_c5yr_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_c5yr_info)+24
	.long	194
	.long	852000
_c5yr_info:
Lc5yr:
	call 1f
1:	popl	%eax
	addl $_c5yC_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,8(%ebx)
	jmp _base_TextziRead_readEither6_info
	.long  _c5yr_info - _c5yr_info_dsp
.text
	.align 2
_c5yC_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_c5yC_info)+24
	.long	194
	.long	852000
_c5yC_info:
Lc5yC:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc5zM
Lc5zN:
	movl %eax,%esi
	addl $_r5iE_closure-(1b)+0,%esi
	addl $12,%ebp
	jmp *(%esi)
Lc5zM:
	addl $_c5yM_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c5yM_info
Lc5yP:
	jmp *(%esi)
	.long  _c5yC_info - _c5yC_info_dsp
.text
	.align 2
_c5yM_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_c5yM_info)+24
	.long	387
	.long	589856
_c5yM_info:
Lc5yM:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc5zI
Lc5zJ:
	movl 4(%ebp),%ecx
	addl $_c5yT_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,%esi
	addl $4,%ebp
	testw $7,%si
	jne _c5yT_info
Lc5yU:
	jmp *(%esi)
Lc5zI:
	movl %eax,%esi
	addl $_r5iF_closure-(1b)+0,%esi
	addl $16,%ebp
	jmp *(%esi)
	.long  _c5yM_info - _c5yM_info_dsp
.text
	.align 2
_c5yT_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_c5yT_info)+24
	.long	194
	.long	65568
_c5yT_info:
Lc5yT:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5z1_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,24(%ebx)
	movl 3(%esi),%eax
	incl %eax
	movl %eax,16(%ebx)
	movl $0,8(%ebx)
	jmp _base_GHCziShow_zdwshowSignedInt_info
	.long  _c5yT_info - _c5yT_info_dsp
.text
	.align 2
_c5z1_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_c5z1_info)+24
	.long	194
	.long	65568
_c5z1_info:
Lc5z1:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5z5_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5z1_info - _c5z1_info_dsp
.text
	.align 2
_c5z5_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_c5z5_info)+24
	.long	194
	.long	65568
_c5z5_info:
Lc5z5:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc5zn
Lc5zm:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	movl %eax,%ecx
	addl $_c5zf_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_jsSetzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c5zf_info
Lc5zp:
	jmp *(%esi)
Lc5zn:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5z5_info - _c5z5_info_dsp
.text
	.align 2
_c5zf_info_dsp:
.text
	.align 2
	.long	451
	.long	32
_c5zf_info:
Lc5zf:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c5zz_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 8(%ebp),%eax
	movl 4(%ebp),%edx
	addl $12,%ebp
	movl %ecx,64(%esp)
	movl 3(%esi),%ecx
	movl %ecx,76(%esp)
	movl 872(%ebx),%ecx
	movl %eax,88(%esp)
	movl 20(%ecx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %edx,100(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%eax)
	movl 100(%ecx),%edx
	movl %edx,112(%esp)
	movl 104(%ecx),%edx
	movl %edx,124(%esp)
	leal 4(%edi),%edx
	subl (%eax),%edx
	xorl %eax,%eax
	movl %eax,136(%esp)
	movl 112(%esp),%eax
	subl %edx,%eax
	movl 124(%esp),%edx
	movl %eax,148(%esp)
	movl 136(%esp),%eax
	sbbl %eax,%edx
	movl 148(%esp),%eax
	movl %eax,100(%ecx)
	movl %edx,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $12,%esp
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 84(%esp),%ecx
	pushl %ecx
	movl 100(%esp),%ecx
	pushl %ecx
	movl %eax,188(%esp)
	call L___app3$stub
	addl $28,%esp
	subl $8,%esp
	movl 168(%esp),%ecx
	pushl %ecx
	movl %eax,184(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,184(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,196(%esp)
	movl %eax,%ecx
	movl %edx,208(%esp)
	movl 196(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 184(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,220(%esp)
	movl 208(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 220(%esp),%ecx
	adcl %eax,%ecx
	movl 184(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 172(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c5zf_info - _c5zf_info_dsp
.text
	.align 2
_c5zz_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c5zz_info:
Lc5zz:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c5zz_info - _c5zz_info_dsp
.const_data
	.align 2
.align 0
_u5Bx_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	131071
.text
	.align 2
_Main_main1_info_dsp:
.text
	.align 2
	.long	_u5Bx_srtd-(_Main_main1_info)+0
	.long	65539
	.long	0
	.long	-65521
.globl _Main_main1_info
_Main_main1_info:
Lc5zZ:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc5A0
Lc5A1:
	movl %eax,%ecx
	addl $_c5vV_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	addl $_c5vU_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc5A0:
	movl L_Main_main1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _Main_main1_info - _Main_main1_info_dsp
.const_data
	.align 2
.align 0
_u5By_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	130943
.text
	.align 2
_c5vV_info_dsp:
.text
	.align 2
	.long	_u5By_srtd-(_c5vV_info)+0
	.long	0
	.long	-65504
_c5vV_info:
Lc5vV:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5vZ_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5vV_info - _c5vV_info_dsp
.const_data
	.align 2
.align 0
_u5Bz_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	130943
.text
	.align 2
_c5vZ_info_dsp:
.text
	.align 2
	.long	_u5Bz_srtd-(_c5vZ_info)+0
	.long	0
	.long	-65504
_c5vZ_info:
Lc5vZ:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc5A5
Lc5A4:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	movl %eax,%ecx
	addl $_c5w9_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziJSString_newTextElemzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c5w9_info
Lc5wa:
	jmp *(%esi)
Lc5A5:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5vZ_info - _c5vZ_info_dsp
.const_data
	.align 2
.align 0
_u5BA_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	114559
.text
	.align 2
_c5w9_info_dsp:
.text
	.align 2
	.long	_u5BA_srtd-(_c5w9_info)+0
	.long	65
	.long	-65504
_c5w9_info:
Lc5w9:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c5wh_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%eax
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c5w9_info - _c5w9_info_dsp
.const_data
	.align 2
.align 0
_u5BB_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	114559
.text
	.align 2
_c5wh_info_dsp:
.text
	.align 2
	.long	_u5BB_srtd-(_c5wh_info)+0
	.long	0
	.long	-65504
_c5wh_info:
Lc5wh:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5wk_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	addl $_c5wj_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
	.long  _c5wh_info - _c5wh_info_dsp
.const_data
	.align 2
.align 0
_u5BC_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	114559
.text
	.align 2
_c5wk_info_dsp:
.text
	.align 2
	.long	_u5BC_srtd-(_c5wk_info)+0
	.long	65
	.long	-65504
_c5wk_info:
Lc5wk:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5wo_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5wk_info - _c5wk_info_dsp
.const_data
	.align 2
.align 0
_u5BD_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	114559
.text
	.align 2
_c5wo_info_dsp:
.text
	.align 2
	.long	_u5BD_srtd-(_c5wo_info)+0
	.long	65
	.long	-65504
_c5wo_info:
Lc5wo:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc5Ac
Lc5Ab:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	movl %eax,%ecx
	addl $_c5wy_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziJSString_newElemzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c5wy_info
Lc5wz:
	jmp *(%esi)
Lc5Ac:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5wo_info - _c5wo_info_dsp
.const_data
	.align 2
.align 0
_u5BE_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	81791
.text
	.align 2
_c5wy_info_dsp:
.text
	.align 2
	.long	_u5BE_srtd-(_c5wy_info)+0
	.long	194
	.long	-65504
_c5wy_info:
Lc5wy:
	call 1f
1:	popl	%eax
	addl $_c5wG_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl %eax,4(%ebp)
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 68(%esp),%ecx
	pushl %ecx
	movl 84(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c5wy_info - _c5wy_info_dsp
.const_data
	.align 2
.align 0
_u5BF_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	81791
.text
	.align 2
_c5wG_info_dsp:
.text
	.align 2
	.long	_u5BF_srtd-(_c5wG_info)+0
	.long	194
	.long	-65504
_c5wG_info:
Lc5wG:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5wI_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl %esi,%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_appendChildzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c5wI_info
Lc5wJ:
	jmp *(%esi)
	.long  _c5wG_info - _c5wG_info_dsp
.const_data
	.align 2
.align 0
_u5BG_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	77695
.text
	.align 2
_c5wI_info_dsp:
.text
	.align 2
	.long	_u5BG_srtd-(_c5wI_info)+0
	.long	451
	.long	-65504
_c5wI_info:
Lc5wI:
	call 1f
1:	popl	%eax
	addl $_c5wR_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 12(%ebp),%ecx
	movl %eax,12(%ebp)
	movl 4(%ebp),%edx
	movl %ecx,64(%esp)
	movl 872(%ebx),%ecx
	movl %edx,76(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,100(%esp)
	movl 104(%ecx),%eax
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,124(%esp)
	movl 100(%esp),%edx
	subl %eax,%edx
	movl 112(%esp),%eax
	movl %edx,136(%esp)
	movl 124(%esp),%edx
	sbbl %edx,%eax
	movl 136(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	movl 76(%esp),%ecx
	pushl %ecx
	movl 68(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L___app2$stub
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c5wI_info - _c5wI_info_dsp
.const_data
	.align 2
.align 0
_u5BH_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	77695
.text
	.align 2
_c5wR_info_dsp:
.text
	.align 2
	.long	_u5BH_srtd-(_c5wR_info)+0
	.long	451
	.long	-65504
_c5wR_info:
Lc5wR:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5wT_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_documentBody1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c5wT_info
Lc5wU:
	jmp *(%esi)
	.long  _c5wR_info - _c5wR_info_dsp
.const_data
	.align 2
.align 0
_u5BI_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	75647
.text
	.align 2
_c5wT_info_dsp:
.text
	.align 2
	.long	_u5BI_srtd-(_c5wT_info)+0
	.long	451
	.long	-65504
_c5wT_info:
Lc5wT:
	call 1f
1:	popl	%eax
	addl $_c5x2_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl %eax,4(%ebp)
	movl 12(%ebp),%edx
	movl %edx,64(%esp)
	movl 872(%ebx),%edx
	movl %ecx,76(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,100(%esp)
	movl 104(%edx),%eax
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,124(%esp)
	movl 100(%esp),%ecx
	subl %eax,%ecx
	movl 112(%esp),%eax
	movl %ecx,136(%esp)
	movl 124(%esp),%ecx
	sbbl %ecx,%eax
	movl 136(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L___app2$stub
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c5wT_info - _c5wT_info_dsp
.const_data
	.align 2
.align 0
_u5BJ_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	75647
.text
	.align 2
_c5x2_info_dsp:
.text
	.align 2
	.long	_u5BJ_srtd-(_c5x2_info)+0
	.long	451
	.long	-65504
_c5x2_info:
Lc5x2:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5x5_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	addl $_c5x4_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
	.long  _c5x2_info - _c5x2_info_dsp
.const_data
	.align 2
.align 0
_u5BK_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	75647
.text
	.align 2
_c5x5_info_dsp:
.text
	.align 2
	.long	_u5BK_srtd-(_c5x5_info)+0
	.long	451
	.long	-65504
_c5x5_info:
Lc5x5:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c5x9_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5x5_info - _c5x5_info_dsp
.const_data
	.align 2
.align 0
_u5BL_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	75647
.text
	.align 2
_c5x9_info_dsp:
.text
	.align 2
	.long	_u5BL_srtd-(_c5x9_info)+0
	.long	451
	.long	-65504
_c5x9_info:
Lc5x9:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc5An
Lc5Am:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c5xm_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl (%edi),%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%ecx
	addl $-4,%ebp
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc5An:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5x9_info - _c5x9_info_dsp
.const_data
	.align 2
.align 0
_u5BM_srtd:
	.long	_S5pe_srt+20
	.long	17
	.long	75647
.text
	.align 2
_c5xm_info_dsp:
.text
	.align 2
	.long	_u5BM_srtd-(_c5xm_info)+0
	.long	964
	.long	-65504
_c5xm_info:
Lc5xm:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc5Ar
Lc5Aq:
	movl %eax,%ecx
	addl $_s5oi_info-(1b)+0,%ecx
	movl %ecx,-8(%edi)
	movl 12(%ebp),%ecx
	movl %ecx,-4(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,(%edi)
	movl %eax,%ecx
	addl $_c5xN_info-(1b)+0,%ecx
	movl %ecx,4(%ebp)
	movl %eax,%ecx
	addl $_r5iP_closure-(1b)+2,%ecx
	movl %ecx,32(%ebx)
	leal -7(%edi),%ecx
	movl %ecx,24(%ebx)
	movl L_z30UqEPBHMdsbP05EH96SVtGd_ControlziMonadziIOziClass_zdfMonadIOIO_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,16(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_v_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,(%ebp)
	movl %esi,12(%ebp)
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_with_info
Lc5Ar:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5xm_info - _c5xm_info_dsp
.text
	.align 2
_c5xN_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_c5xN_info)+20
	.long	451
	.long	645857312
_c5xN_info:
Lc5xN:
	call 1f
1:	popl	%eax
	addl $_c5xT_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %esi,(%ebp)
	movl 12(%ebp),%eax
	movl 8(%ebp),%ecx
	movl 4(%ebp),%edx
	addl $-4,%ebp
	movl %eax,64(%esp)
	movl 872(%ebx),%eax
	movl %ecx,76(%esp)
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %edx,88(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,100(%esp)
	movl 104(%eax),%edx
	movl %edx,112(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,124(%esp)
	movl 100(%esp),%ecx
	subl %edx,%ecx
	movl 112(%esp),%edx
	movl %ecx,136(%esp)
	movl 124(%esp),%ecx
	sbbl %ecx,%edx
	movl 136(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L___app2$stub
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c5xN_info - _c5xN_info_dsp
.text
	.align 2
_c5xT_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_c5xT_info)+20
	.long	900
	.long	645857312
_c5xT_info:
Lc5xT:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c5xV_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,%esi
	addl $4,%ebp
	testw $7,%si
	jne _c5xV_info
Lc5xW:
	jmp *(%esi)
	.long  _c5xT_info - _c5xT_info_dsp
.text
	.align 2
_c5xV_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_c5xV_info)+20
	.long	451
	.long	645857312
_c5xV_info:
Lc5xV:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c5y4_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 12(%ebp),%eax
	movl %esi,12(%ebp)
	addl $4,%ebp
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 872(%ebx),%eax
	movl %edx,76(%esp)
	movl 20(%eax),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %ecx,88(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%edx)
	movl 100(%eax),%ecx
	movl %ecx,100(%esp)
	movl 104(%eax),%ecx
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	subl (%edx),%ecx
	xorl %edx,%edx
	movl %edx,124(%esp)
	movl 100(%esp),%edx
	subl %ecx,%edx
	movl 112(%esp),%ecx
	movl %edx,136(%esp)
	movl 124(%esp),%edx
	sbbl %edx,%ecx
	movl 136(%esp),%edx
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L___app2$stub
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c5xV_info - _c5xV_info_dsp
.text
	.align 2
_c5y4_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_c5y4_info)+20
	.long	66
	.long	645857312
_c5y4_info:
Lc5y4:
	call 1f
1:	popl	%eax
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc5Ax
Lc5Aw:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-12(%edi)
	movl %eax,%edx
	addl $_s5p4_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	leal -15(%edi),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_Click_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,40(%ebx)
	movl 8(%ebp),%ecx
	movl %ecx,32(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,24(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,16(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziCore_zdfMonadEventIO_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,8(%ebx)
	leal -6(%edi),%ecx
	movl %ecx,4(%ebp)
	movl L_stg_ap_v_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,8(%ebp)
	addl $4,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziCore_onEvent_info
Lc5Ax:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c5y4_info - _c5y4_info_dsp
.data
	.align 2
.align 0
.globl _Main_main_closure
_Main_main_closure:
	.long	_Main_main_info
	.long	0
.text
	.align 2
_Main_main_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_Main_main_info)+48
	.long	65539
	.long	0
	.long	65551
.globl _Main_main_info
_Main_main_info:
Lc5HW:
	jmp _Main_main1_info
	.long  _Main_main_info - _Main_main_info_dsp
.data
	.align 2
.align 0
.globl _Main_main2_closure
_Main_main2_closure:
	.long	_Main_main2_info
	.long	0
.text
	.align 2
_Main_main2_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_Main_main2_info)+48
	.long	65539
	.long	0
	.long	67174415
.globl _Main_main2_info
_Main_main2_info:
Lc5I7:
	call 1f
1:	popl	%eax
	movl L_Main_main1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	jmp _base_GHCziTopHandler_runMainIO1_info
	.long  _Main_main2_info - _Main_main2_info_dsp
.data
	.align 2
.align 0
.globl _ZCMain_main_closure
_ZCMain_main_closure:
	.long	_ZCMain_main_info
	.long	0
.text
	.align 2
_ZCMain_main_info_dsp:
.text
	.align 2
	.long	_S5pe_srt-(_ZCMain_main_info)+92
	.long	65539
	.long	0
	.long	65551
.globl _ZCMain_main_info
_ZCMain_main_info:
Lc5Il:
	jmp _Main_main2_info
	.long  _ZCMain_main_info - _ZCMain_main_info_dsp
.const_data
	.align 2
.align 0
_S5pe_srt:
	.long	_base_GHCziErr_error_closure
	.long	_base_TextziRead_readEither4_closure
	.long	_base_TextziRead_readEither2_closure
	.long	_base_GHCziRead_zdfReadIntzuzdsconvertInt_closure
	.long	_base_GHCziRead_zdfReadInt3_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOM_getProp_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_jsSetzuf1_closure
	.long	_z30UqEPBHMdsbP05EH96SVtGd_ControlziMonadziIOziClass_zdfMonadIOIO_closure
	.long	_r5iE_closure
	.long	_r5iF_closure
	.long	_r5iG_closure
	.long	_r5iL_closure
	.long	_Main_main1_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_with_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziCore_onEvent_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_documentBody1_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_appendChildzuf1_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziCore_zdfMonadEventIO_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziJSString_newTextElemzuf1_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziJSString_newElemzuf1_closure
	.long	_r5iP_closure
	.long	_base_GHCziTopHandler_runMainIO1_closure
	.long	_Main_main2_closure
.section __TEXT,__textcoal_nt,coalesced,no_toc
.weak_definition ___i686.get_pc_thunk.ax
.private_extern ___i686.get_pc_thunk.ax
___i686.get_pc_thunk.ax:
	movl (%esp), %eax
	ret
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_AttrName_con_info$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_AttrName_con_info
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_Attribute_con_info$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_Attribute_con_info
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_appendChildzuf1_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_appendChildzuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_documentBody1_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_documentBody1_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_jsSetzuf1_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_jsSetzuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziJSString_newElemzuf1_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziJSString_newElemzuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziJSString_newTextElemzuf1_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziJSString_newTextElemzuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziCore_zdfMonadEventIO_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziCore_zdfMonadEventIO_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_Click_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_Click_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure
	.long	0
.non_lazy_symbol_pointer
L_Main_main1_closure$non_lazy_ptr:
	.indirect_symbol _Main_main1_closure
	.long	0
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L___app1$stub:
	.indirect_symbol ___app1
	call ___i686.get_pc_thunk.ax
1:
	movl L___app1$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L___app1$stub_binder:
	lea L___app1$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L___app1$lazy_ptr:
	.indirect_symbol ___app1
	.long L___app1$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L___app2$stub:
	.indirect_symbol ___app2
	call ___i686.get_pc_thunk.ax
1:
	movl L___app2$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L___app2$stub_binder:
	lea L___app2$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L___app2$lazy_ptr:
	.indirect_symbol ___app2
	.long L___app2$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L___app3$stub:
	.indirect_symbol ___app3
	call ___i686.get_pc_thunk.ax
1:
	movl L___app3$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L___app3$stub_binder:
	lea L___app3$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L___app3$lazy_ptr:
	.indirect_symbol ___app3
	.long L___app3$stub_binder
.non_lazy_symbol_pointer
L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr:
	.indirect_symbol _base_GHCziPtr_Ptr_con_info
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziRead_zdfReadIntzuzdsconvertInt_closure$non_lazy_ptr:
	.indirect_symbol _base_GHCziRead_zdfReadIntzuzdsconvertInt_closure
	.long	0
.non_lazy_symbol_pointer
L_base_TextziParserCombinatorsziReadPrec_minPrec_closure$non_lazy_ptr:
	.indirect_symbol _base_TextziParserCombinatorsziReadPrec_minPrec_closure
	.long	0
.non_lazy_symbol_pointer
L_base_TextziRead_readEither2_closure$non_lazy_ptr:
	.indirect_symbol _base_TextziRead_readEither2_closure
	.long	0
.non_lazy_symbol_pointer
L_base_TextziRead_readEither4_closure$non_lazy_ptr:
	.indirect_symbol _base_TextziRead_readEither4_closure
	.long	0
.non_lazy_symbol_pointer
L_base_TextziRead_readEither5_closure$non_lazy_ptr:
	.indirect_symbol _base_TextziRead_readEither5_closure
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_Izh_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_ZMZN_closure
	.long	0
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_newCAF$stub:
	.indirect_symbol _newCAF
	call ___i686.get_pc_thunk.ax
1:
	movl L_newCAF$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_newCAF$stub_binder:
	lea L_newCAF$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_newCAF$lazy_ptr:
	.indirect_symbol _newCAF
	.long L_newCAF$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_resumeThread$stub:
	.indirect_symbol _resumeThread
	call ___i686.get_pc_thunk.ax
1:
	movl L_resumeThread$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_resumeThread$stub_binder:
	lea L_resumeThread$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_resumeThread$lazy_ptr:
	.indirect_symbol _resumeThread
	.long L_resumeThread$stub_binder
.non_lazy_symbol_pointer
L_stg_ap_p_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_p_info
	.long	0
.non_lazy_symbol_pointer
L_stg_ap_v_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_v_info
	.long	0
.non_lazy_symbol_pointer
L_stg_bh_upd_frame_info$non_lazy_ptr:
	.indirect_symbol _stg_bh_upd_frame_info
	.long	0
.non_lazy_symbol_pointer
L_stg_gc_unbx_r1$non_lazy_ptr:
	.indirect_symbol _stg_gc_unbx_r1
	.long	0
.non_lazy_symbol_pointer
L_stg_gc_unpt_r1$non_lazy_ptr:
	.indirect_symbol _stg_gc_unpt_r1
	.long	0
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_suspendThread$stub:
	.indirect_symbol _suspendThread
	call ___i686.get_pc_thunk.ax
1:
	movl L_suspendThread$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_suspendThread$stub_binder:
	lea L_suspendThread$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_suspendThread$lazy_ptr:
	.indirect_symbol _suspendThread
	.long L_suspendThread$stub_binder
.non_lazy_symbol_pointer
L_toJSStr$non_lazy_ptr:
	.indirect_symbol _toJSStr
	.long	0
.non_lazy_symbol_pointer
L_z30UqEPBHMdsbP05EH96SVtGd_ControlziMonadziIOziClass_zdfMonadIOIO_closure$non_lazy_ptr:
	.indirect_symbol _z30UqEPBHMdsbP05EH96SVtGd_ControlziMonadziIOziClass_zdfMonadIOIO_closure
	.long	0
.subsections_via_symbols
.ident "GHC 7.10.3"

